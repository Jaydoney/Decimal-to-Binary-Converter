/*
    Jason Reid
    April 21st, 2018
    Mr. Rosen
    This program recieves input in the form of a decimal number from the user and converts it into binary.
    The splashScreen has a small, animated graphic.
    The mainMenu screen prompts the user to either learn more about the program, run the conversion or quit the program
    The instructions screen educates the user a bit more on the innerworkings of the program
    The askData screen reads and stores input from the user
    The display screen displays the converted binary number to the user
    The exit screen alerts the user the program is over and closes the program.
    
    
    NAME        VARIABLE        DESCRIPTION
		TYPES
    ---------------------------------------------------------------------------------------------
    input       char            This variable stores the menu choice by the user
    decimal     long            This variable stores the decimal number that was orignially a string entered by the user
    binary      long            This variable stores the binary number generated by the program
    numstr      String          This variable stores the string that will be casted into an integer by the program
*/

//import files
import java.awt.*;
import hsa.Console;
import javax.swing.JOptionPane;     //imports the class for the error message to user.

public class DecimalToBinary
{
    static Console c;           // The output console

    //instance variables
    static char input;
    static long decimal;

    /*
    This method clears the console screen and then prints the title of the program.
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: none.
    ---------------------------------------------------------------------------------------------------------------
    */
    
    static public void title ()
    {
	c.clear ();
	c.print (' ', 29);
	c.println ("Decimal To Binary Converter");
	c.println ();
	c.println ();
    }

    /*
    This method creates a splash screen that has a graphic of a computer with binary written on it.
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: int i
    Global Variables Used: none.
    ---------------------------------------------------------------------------------------------------------------
    */
    public void splashScreen ()
    {
	title ();
	c.setColor (Color.black);
	
	//for loop that animates the computer screen to the right every 0.5 second
	for (int i = 0 ; i < 600 ; i++)
	{
	    c.setColor (Color.lightGray);
	    c.setFont (new Font ("Arial", Font.BOLD, 25));
	    c.fillRect (25 + i, 200, 240, 150);
	    c.setColor (Color.black);
	    c.fillRect (40 + i, 215, 210, 120);
	    c.setColor (Color.green);
	    c.drawString ("Plug Walk", 90 + i, 235);
	    c.setFont (new Font ("Arial", 1, 15));
	    c.drawString ("1001010110110101101110100", 45 + i, 250);
	    c.drawString ("1100101010010101011011010", 45 + i, 265);
	    c.drawString ("1010111001011001100110100", 45 + i, 280);
	    c.drawString ("1000101001010101101110110", 45 + i, 295);
	    c.drawString ("0110010101011001100111011", 45 + i, 310);
	    c.drawString ("1010101000101010110110010", 45 + i, 325);
	    
	    
	    try
	    {
		Thread.sleep (5);
	    }
	    catch (Exception e)
	    {
	    }
	    c.setColor (Color.white);
	    c.fillRect (25 + i, 200, 240, 150);
	}

	pauseProgram ();
    }

    /*
    This method displays a main menu for the user to select which part of the program they want to go to.
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: char input
    ---------------------------------------------------------------------------------------------------------------
    */

    public void mainMenu ()
    {
	title ();
	c.print (' ', 31);
	c.println ("Press 1 for instructions.");
	c.println ();
	c.print (' ', 15);
	c.println ("Press 2 to convert a decimal number to a binary number.");
	c.println ();
	c.print (' ', 27);
	c.println ("Press any key to exit the program.");
	
	//stores the user input under a variable
	input = c.getChar ();

    }

    /*
    This method displays further information about the program to educate the user
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: none.
    ---------------------------------------------------------------------------------------------------------------
    */
    static public void instructions ()
    {
	title ();
	c.print (' ', 10);
	c.println ("In this program you can convert decimal numbers to binary numbers.");
	c.print (' ', 7);
	c.println ("Once the user inputs an integer, the computer uses a specific algorithm");
	c.print (' ', 4);
	c.println ("to return a binary number. The binary number is then displayed to the user.");
	pauseProgram ();

    }

    /*
    This method asks the user for input so it can store it for later.
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: String numstr
    Global Variables Used: long decimal
    ---------------------------------------------------------------------------------------------------------------
    */
    static public void askData ()
    {
	title ();
	String numstr;
	decimal = 0;

	c.print (' ', 20);
	c.print ("Please enter a valid whole number below 524288: ");
	//do while loop to ensure the program will keep asking the user for a decimal number until the criteria is met
	//in this instance, the criteria is the decimal number must be greater than 0 and less than 524288
	do
	{
	    //try catch loop - tries the block of code under try, if an error ic caught, it prints an error message
	    try
	    {
		//prompts the user for a decimal number
		numstr = c.readLine ();
		decimal = Long.parseLong (numstr);
		//this syntax states that if the decimal number is valid, the program should break out of the do while loop
		if (decimal > -.0001 && decimal < 524288)
		{
		    break;
		}
		//this syntax states if the value fails to meet the criteria, it will deliver an error message and promt the user to try again
		else
		{
		    JOptionPane.showMessageDialog (null, "Please enter valid Decimal Number");
		    c.setCursor (4, 64);

		}
	    }
	    catch (NumberFormatException e)
	    {
		JOptionPane.showMessageDialog (null, "At least enter a number, buddy.");
		c.setCursor (4, 64);
	    }
	}
	//ensures that this block of code will keep running whenever the value workDone is less than 0 which makes it invalid.
	while (decimal < .00000001 || decimal > 524288);
    }

    /*
    This method displays the converted number to the user
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: none.
    ---------------------------------------------------------------------------------------------------------------
    */

    static public void display ()
    {
	title ();
	c.print (' ', 28);
	c.println (decimal + " converted to binary is: ");
	c.print(' ', 35);
	c.print(decToBi (decimal));
	pauseProgram ();
    }

    /*
    This method thanks the user for playing and quits the program.
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: none.
    ---------------------------------------------------------------------------------------------------------------
    */
    static public void exit ()
    {
	title ();
	c.print (' ', 30);
	c.println ("Goodbye! Thanks for playing!");
	c.print (' ', 26);
	c.println ("Press any key to close the program...");
	c.getChar ();
	c.close ();

    }

    /*
    This method pauses the program by prompting the user for a character before finishing execution.
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: none.
    ---------------------------------------------------------------------------------------------------------------
    */

    static public void pauseProgram ()
    {
	c.println ();
	c.println ();
	c.print (' ', 25);
	c.println ("Press any key to continue the program...");
	c.getChar ();
    }

    /*
    This method converts the decimal value to a binary value using a recursion method.
    This method breaks down the input recieved by the user until it reaches the base case which is when decimal is equal to 0
    ---------------------------------------------------------------------------------------------------------------
    Local Variables: none.
    Global Variables Used: long decimal
    ---------------------------------------------------------------------------------------------------------------
    */
    static private long decToBi (long decimal)
    {
	if (decimal == 0)
	{
	    return 0;
	}


	else
	{
	    return (decimal % 2 + (10 * decToBi (decimal / 2)));
	}
    }

    //class constructor
    public DecimalToBinary ()
    {
	c = new Console ();
    }

    //main method
    public static void main (String[] args)
    {
	DecimalToBinary d = new DecimalToBinary ();
	d.splashScreen ();
	while (true)
	{
	    d.mainMenu ();
	    if (input == '1')
	    {
		instructions ();
	    }
	    else if (input == '2')
	    {
		askData ();
		display ();
	    }
	    else
	    {
		exit ();
		break;
	    }
	}


	// Place your program here.  'c' is the output console
    } // main method
} // DecimalToBinary class


